generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String          @id @default(cuid())
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  password      String?
  preferencesId Int?
  accounts      Account[]
  sessions      Session[]
  hunts         Hunt[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
//Custom tables
model Casino {
  id            String           @id @default(cuid())
  name          String           @unique
  createdAt     DateTime         @default(now())
  games         Game[]
}

model Game {
  id            String           @id @default(cuid())
  name          String
  casinoId      String
  imageId       String           @unique
  createdAt     DateTime         @default(now())
  casino        Casino           @relation(fields: [casinoId], references: [id])
  image         Image            @relation(fields: [imageId], references: [id])
  bonuses       Bonus[]
}

model Image {
  id            String          @id @default(cuid())
  data          Bytes
  createdAt     DateTime        @default(now())
  game          Game?
}

model Hunt {
  id            String          @id @default(cuid())
  startingBet   Float           @default(0)
  gains         Float           @default(0)
  opened        Boolean         @default(true)
  isPublic      Boolean         @default(false)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  userId        String
  user          User            @relation(fields: [userId], references: [id])
  bonuses       Bonus[]
}

model Bonus {
  id            String          @id @default(cuid())
  opened        Boolean         @default(false)
  startingBet   Float           @default(0)
  gain          Float           @default(0)
  gameId        String
  huntId        String
  game          Game            @relation(fields: [gameId], references: [id])
  hunt          Hunt            @relation(fields: [huntId], references: [id])
}

